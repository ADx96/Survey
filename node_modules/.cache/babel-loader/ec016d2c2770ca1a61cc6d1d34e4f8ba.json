{"ast":null,"code":"import { Reaction, _allowStateChanges, _allowStateReadsStart, _allowStateReadsEnd, $mobx, createAtom, untracked, isObservableMap, isObservableObject, isObservableArray, observable } from 'mobx';\nimport React__default, { PureComponent, Component, forwardRef, memo, createElement } from 'react';\nimport { isUsingStaticRendering, Observer, observer as observer$1 } from 'mobx-react-lite';\nexport { Observer, enableStaticRendering, isUsingStaticRendering, observerBatching, useAsObservableSource, useLocalObservable, useLocalStore, useObserver, useStaticRendering } from 'mobx-react-lite';\nvar symbolId = 0;\n\nfunction createSymbol(name) {\n  if (typeof Symbol === \"function\") {\n    return Symbol(name);\n  }\n\n  var symbol = \"__$mobx-react \" + name + \" (\" + symbolId + \")\";\n  symbolId++;\n  return symbol;\n}\n\nvar createdSymbols = {};\n\nfunction newSymbol(name) {\n  if (!createdSymbols[name]) {\n    createdSymbols[name] = createSymbol(name);\n  }\n\n  return createdSymbols[name];\n}\n\nfunction shallowEqual(objA, objB) {\n  //From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n  if (is(objA, objB)) return true;\n\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!Object.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction is(x, y) {\n  // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n} // based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\n\n\nvar hoistBlackList = {\n  $$typeof: 1,\n  render: 1,\n  compare: 1,\n  type: 1,\n  childContextTypes: 1,\n  contextType: 1,\n  contextTypes: 1,\n  defaultProps: 1,\n  getDefaultProps: 1,\n  getDerivedStateFromError: 1,\n  getDerivedStateFromProps: 1,\n  mixins: 1,\n  displayName: 1,\n  propTypes: 1\n};\n\nfunction copyStaticProperties(base, target) {\n  var protoProps = Object.getOwnPropertyNames(Object.getPrototypeOf(base));\n  Object.getOwnPropertyNames(base).forEach(function (key) {\n    if (!hoistBlackList[key] && protoProps.indexOf(key) === -1) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n    }\n  });\n}\n/**\r\n * Helper to set `prop` to `this` as non-enumerable (hidden prop)\r\n * @param target\r\n * @param prop\r\n * @param value\r\n */\n\n\nfunction setHiddenProp(target, prop, value) {\n  if (!Object.hasOwnProperty.call(target, prop)) {\n    Object.defineProperty(target, prop, {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: value\n    });\n  } else {\n    target[prop] = value;\n  }\n}\n/**\r\n * Utilities for patching componentWillUnmount, to make sure @disposeOnUnmount works correctly icm with user defined hooks\r\n * and the handler provided by mobx-react\r\n */\n\n\nvar mobxMixins = /*#__PURE__*/newSymbol(\"patchMixins\");\nvar mobxPatchedDefinition = /*#__PURE__*/newSymbol(\"patchedDefinition\");\n\nfunction getMixins(target, methodName) {\n  var mixins = target[mobxMixins] = target[mobxMixins] || {};\n  var methodMixins = mixins[methodName] = mixins[methodName] || {};\n  methodMixins.locks = methodMixins.locks || 0;\n  methodMixins.methods = methodMixins.methods || [];\n  return methodMixins;\n}\n\nfunction wrapper(realMethod, mixins) {\n  var _this = this;\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  } // locks are used to ensure that mixins are invoked only once per invocation, even on recursive calls\n\n\n  mixins.locks++;\n\n  try {\n    var retVal;\n\n    if (realMethod !== undefined && realMethod !== null) {\n      retVal = realMethod.apply(this, args);\n    }\n\n    return retVal;\n  } finally {\n    mixins.locks--;\n\n    if (mixins.locks === 0) {\n      mixins.methods.forEach(function (mx) {\n        mx.apply(_this, args);\n      });\n    }\n  }\n}\n\nfunction wrapFunction(realMethod, mixins) {\n  var fn = function fn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    wrapper.call.apply(wrapper, [this, realMethod, mixins].concat(args));\n  };\n\n  return fn;\n}\n\nfunction patch(target, methodName, mixinMethod) {\n  var mixins = getMixins(target, methodName);\n\n  if (mixins.methods.indexOf(mixinMethod) < 0) {\n    mixins.methods.push(mixinMethod);\n  }\n\n  var oldDefinition = Object.getOwnPropertyDescriptor(target, methodName);\n\n  if (oldDefinition && oldDefinition[mobxPatchedDefinition]) {\n    // already patched definition, do not repatch\n    return;\n  }\n\n  var originalMethod = target[methodName];\n  var newDefinition = createDefinition(target, methodName, oldDefinition ? oldDefinition.enumerable : undefined, mixins, originalMethod);\n  Object.defineProperty(target, methodName, newDefinition);\n}\n\nfunction createDefinition(target, methodName, enumerable, mixins, originalMethod) {\n  var _ref;\n\n  var wrappedFunc = wrapFunction(originalMethod, mixins);\n  return _ref = {}, _ref[mobxPatchedDefinition] = true, _ref.get = function get() {\n    return wrappedFunc;\n  }, _ref.set = function set(value) {\n    if (this === target) {\n      wrappedFunc = wrapFunction(value, mixins);\n    } else {\n      // when it is an instance of the prototype/a child prototype patch that particular case again separately\n      // since we need to store separate values depending on wether it is the actual instance, the prototype, etc\n      // e.g. the method for super might not be the same as the method for the prototype which might be not the same\n      // as the method for the instance\n      var newDefinition = createDefinition(this, methodName, enumerable, mixins, value);\n      Object.defineProperty(this, methodName, newDefinition);\n    }\n  }, _ref.configurable = true, _ref.enumerable = enumerable, _ref;\n}\n\nvar mobxAdminProperty = $mobx || \"$mobx\";\nvar mobxObserverProperty = /*#__PURE__*/newSymbol(\"isMobXReactObserver\");\nvar mobxIsUnmounted = /*#__PURE__*/newSymbol(\"isUnmounted\");\nvar skipRenderKey = /*#__PURE__*/newSymbol(\"skipRender\");\nvar isForcingUpdateKey = /*#__PURE__*/newSymbol(\"isForcingUpdate\");\n\nfunction makeClassComponentObserver(componentClass) {\n  var target = componentClass.prototype;\n\n  if (componentClass[mobxObserverProperty]) {\n    var displayName = getDisplayName(target);\n    console.warn(\"The provided component class (\" + displayName + \") \\n                has already been declared as an observer component.\");\n  } else {\n    componentClass[mobxObserverProperty] = true;\n  }\n\n  if (target.componentWillReact) throw new Error(\"The componentWillReact life-cycle event is no longer supported\");\n\n  if (componentClass[\"__proto__\"] !== PureComponent) {\n    if (!target.shouldComponentUpdate) target.shouldComponentUpdate = observerSCU;else if (target.shouldComponentUpdate !== observerSCU) // n.b. unequal check, instead of existence check, as @observer might be on superclass as well\n      throw new Error(\"It is not allowed to use shouldComponentUpdate in observer based components.\");\n  } // this.props and this.state are made observable, just to make sure @computed fields that\n  // are defined inside the component, and which rely on state or props, re-compute if state or props change\n  // (otherwise the computed wouldn't update and become stale on props change, since props are not observable)\n  // However, this solution is not without it's own problems: https://github.com/mobxjs/mobx-react/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Aobservable-props-or-not+\n\n\n  makeObservableProp(target, \"props\");\n  makeObservableProp(target, \"state\");\n  var baseRender = target.render;\n\n  if (typeof baseRender !== 'function') {\n    var _displayName = getDisplayName(target);\n\n    throw new Error(\"[mobx-react] class component (\" + _displayName + \") is missing `render` method.\" + \"\\n`observer` requires `render` being a function defined on prototype.\" + \"\\n`render = () => {}` or `render = function() {}` is not supported.\");\n  }\n\n  target.render = function () {\n    return makeComponentReactive.call(this, baseRender);\n  };\n\n  patch(target, \"componentWillUnmount\", function () {\n    var _this$render$mobxAdmi;\n\n    if (isUsingStaticRendering() === true) return;\n    (_this$render$mobxAdmi = this.render[mobxAdminProperty]) == null ? void 0 : _this$render$mobxAdmi.dispose();\n    this[mobxIsUnmounted] = true;\n\n    if (!this.render[mobxAdminProperty]) {\n      // Render may have been hot-swapped and/or overriden by a subclass.\n      var _displayName2 = getDisplayName(this);\n\n      console.warn(\"The reactive render of an observer class component (\" + _displayName2 + \") \\n                was overriden after MobX attached. This may result in a memory leak if the \\n                overriden reactive render was not properly disposed.\");\n    }\n  });\n  return componentClass;\n} // Generates a friendly name for debugging\n\n\nfunction getDisplayName(comp) {\n  return comp.displayName || comp.name || comp.constructor && (comp.constructor.displayName || comp.constructor.name) || \"<component>\";\n}\n\nfunction makeComponentReactive(render) {\n  var _this = this;\n\n  if (isUsingStaticRendering() === true) return render.call(this);\n  /**\r\n   * If props are shallowly modified, react will render anyway,\r\n   * so atom.reportChanged() should not result in yet another re-render\r\n   */\n\n  setHiddenProp(this, skipRenderKey, false);\n  /**\r\n   * forceUpdate will re-assign this.props. We don't want that to cause a loop,\r\n   * so detect these changes\r\n   */\n\n  setHiddenProp(this, isForcingUpdateKey, false);\n  var initialName = getDisplayName(this);\n  var baseRender = render.bind(this);\n  var isRenderingPending = false;\n  var reaction = new Reaction(initialName + \".render()\", function () {\n    if (!isRenderingPending) {\n      // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.js)\n      // This unidiomatic React usage but React will correctly warn about this so we continue as usual\n      // See #85 / Pull #44\n      isRenderingPending = true;\n\n      if (_this[mobxIsUnmounted] !== true) {\n        var hasError = true;\n\n        try {\n          setHiddenProp(_this, isForcingUpdateKey, true);\n          if (!_this[skipRenderKey]) Component.prototype.forceUpdate.call(_this);\n          hasError = false;\n        } finally {\n          setHiddenProp(_this, isForcingUpdateKey, false);\n          if (hasError) reaction.dispose();\n        }\n      }\n    }\n  });\n  reaction[\"reactComponent\"] = this;\n  reactiveRender[mobxAdminProperty] = reaction;\n  this.render = reactiveRender;\n\n  function reactiveRender() {\n    isRenderingPending = false;\n    var exception = undefined;\n    var rendering = undefined;\n    reaction.track(function () {\n      try {\n        rendering = _allowStateChanges(false, baseRender);\n      } catch (e) {\n        exception = e;\n      }\n    });\n\n    if (exception) {\n      throw exception;\n    }\n\n    return rendering;\n  }\n\n  return reactiveRender.call(this);\n}\n\nfunction observerSCU(nextProps, nextState) {\n  if (isUsingStaticRendering()) {\n    console.warn(\"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\");\n  } // update on any state changes (as is the default)\n\n\n  if (this.state !== nextState) {\n    return true;\n  } // update if props are shallowly not equal, inspired by PureRenderMixin\n  // we could return just 'false' here, and avoid the `skipRender` checks etc\n  // however, it is nicer if lifecycle events are triggered like usually,\n  // so we return true here if props are shallowly modified.\n\n\n  return !shallowEqual(this.props, nextProps);\n}\n\nfunction makeObservableProp(target, propName) {\n  var valueHolderKey = newSymbol(\"reactProp_\" + propName + \"_valueHolder\");\n  var atomHolderKey = newSymbol(\"reactProp_\" + propName + \"_atomHolder\");\n\n  function getAtom() {\n    if (!this[atomHolderKey]) {\n      setHiddenProp(this, atomHolderKey, createAtom(\"reactive \" + propName));\n    }\n\n    return this[atomHolderKey];\n  }\n\n  Object.defineProperty(target, propName, {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var prevReadState = false;\n\n      if (_allowStateReadsStart && _allowStateReadsEnd) {\n        prevReadState = _allowStateReadsStart(true);\n      }\n\n      getAtom.call(this).reportObserved();\n\n      if (_allowStateReadsStart && _allowStateReadsEnd) {\n        _allowStateReadsEnd(prevReadState);\n      }\n\n      return this[valueHolderKey];\n    },\n    set: function set(v) {\n      if (!this[isForcingUpdateKey] && !shallowEqual(this[valueHolderKey], v)) {\n        setHiddenProp(this, valueHolderKey, v);\n        setHiddenProp(this, skipRenderKey, true);\n        getAtom.call(this).reportChanged();\n        setHiddenProp(this, skipRenderKey, false);\n      } else {\n        setHiddenProp(this, valueHolderKey, v);\n      }\n    }\n  });\n}\n\nvar hasSymbol = typeof Symbol === \"function\" && Symbol[\"for\"]; // Using react-is had some issues (and operates on elements, not on types), see #608 / #609\n\nvar ReactForwardRefSymbol = hasSymbol ? /*#__PURE__*/Symbol[\"for\"](\"react.forward_ref\") : typeof forwardRef === \"function\" && /*#__PURE__*/forwardRef(function (props) {\n  return null;\n})[\"$$typeof\"];\nvar ReactMemoSymbol = hasSymbol ? /*#__PURE__*/Symbol[\"for\"](\"react.memo\") : typeof memo === \"function\" && /*#__PURE__*/memo(function (props) {\n  return null;\n})[\"$$typeof\"];\n/**\r\n * Observer function / decorator\r\n */\n\nfunction observer(component) {\n  if (component[\"isMobxInjector\"] === true) {\n    console.warn(\"Mobx observer: You are trying to use 'observer' on a component that already has 'inject'. Please apply 'observer' before applying 'inject'\");\n  }\n\n  if (ReactMemoSymbol && component[\"$$typeof\"] === ReactMemoSymbol) {\n    throw new Error(\"Mobx observer: You are trying to use 'observer' on a function component wrapped in either another observer or 'React.memo'. The observer already applies 'React.memo' for you.\");\n  } // Unwrap forward refs into `<Observer>` component\n  // we need to unwrap the render, because it is the inner render that needs to be tracked,\n  // not the ForwardRef HoC\n\n\n  if (ReactForwardRefSymbol && component[\"$$typeof\"] === ReactForwardRefSymbol) {\n    var baseRender = component[\"render\"];\n    if (typeof baseRender !== \"function\") throw new Error(\"render property of ForwardRef was not a function\");\n    return forwardRef(function ObserverForwardRef() {\n      var args = arguments;\n      return createElement(Observer, null, function () {\n        return baseRender.apply(undefined, args);\n      });\n    });\n  } // Function component\n\n\n  if (typeof component === \"function\" && (!component.prototype || !component.prototype.render) && !component[\"isReactClass\"] && !Object.prototype.isPrototypeOf.call(Component, component)) {\n    return observer$1(component);\n  }\n\n  return makeClassComponentObserver(component);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar MobXProviderContext = /*#__PURE__*/React__default.createContext({});\n\nfunction Provider(props) {\n  var children = props.children,\n      stores = _objectWithoutPropertiesLoose(props, [\"children\"]);\n\n  var parentValue = React__default.useContext(MobXProviderContext);\n  var mutableProviderRef = React__default.useRef(_extends({}, parentValue, stores));\n  var value = mutableProviderRef.current;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var newValue = _extends({}, value, stores); // spread in previous state for the context based stores\n\n\n    if (!shallowEqual(value, newValue)) {\n      throw new Error(\"MobX Provider: The set of provided stores has changed. See: https://github.com/mobxjs/mobx-react#the-set-of-provided-stores-has-changed-error.\");\n    }\n  }\n\n  return React__default.createElement(MobXProviderContext.Provider, {\n    value: value\n  }, children);\n}\n\nProvider.displayName = \"MobXProvider\";\n/**\r\n * Store Injection\r\n */\n\nfunction createStoreInjector(grabStoresFn, component, injectNames, makeReactive) {\n  // Support forward refs\n  var Injector = React__default.forwardRef(function (props, ref) {\n    var newProps = _extends({}, props);\n\n    var context = React__default.useContext(MobXProviderContext);\n    Object.assign(newProps, grabStoresFn(context || {}, newProps) || {});\n\n    if (ref) {\n      newProps.ref = ref;\n    }\n\n    return React__default.createElement(component, newProps);\n  });\n  if (makeReactive) Injector = observer(Injector);\n  Injector[\"isMobxInjector\"] = true; // assigned late to suppress observer warning\n  // Static fields from component should be visible on the generated Injector\n\n  copyStaticProperties(component, Injector);\n  Injector[\"wrappedComponent\"] = component;\n  Injector.displayName = getInjectName(component, injectNames);\n  return Injector;\n}\n\nfunction getInjectName(component, injectNames) {\n  var displayName;\n  var componentName = component.displayName || component.name || component.constructor && component.constructor.name || \"Component\";\n  if (injectNames) displayName = \"inject-with-\" + injectNames + \"(\" + componentName + \")\";else displayName = \"inject(\" + componentName + \")\";\n  return displayName;\n}\n\nfunction grabStoresByName(storeNames) {\n  return function (baseStores, nextProps) {\n    storeNames.forEach(function (storeName) {\n      if (storeName in nextProps // prefer props over stores\n      ) return;\n      if (!(storeName in baseStores)) throw new Error(\"MobX injector: Store '\" + storeName + \"' is not available! Make sure it is provided by some Provider\");\n      nextProps[storeName] = baseStores[storeName];\n    });\n    return nextProps;\n  };\n}\n/**\r\n * higher order component that injects stores to a child.\r\n * takes either a varargs list of strings, which are stores read from the context,\r\n * or a function that manually maps the available stores from the context to props:\r\n * storesToProps(mobxStores, props, context) => newProps\r\n */\n\n\nfunction inject() {\n  for (var _len = arguments.length, storeNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    storeNames[_key] = arguments[_key];\n  }\n\n  if (typeof arguments[0] === \"function\") {\n    var grabStoresFn = arguments[0];\n    return function (componentClass) {\n      return createStoreInjector(grabStoresFn, componentClass, grabStoresFn.name, true);\n    };\n  } else {\n    return function (componentClass) {\n      return createStoreInjector(grabStoresByName(storeNames), componentClass, storeNames.join(\"-\"), false);\n    };\n  }\n}\n\nvar protoStoreKey = /*#__PURE__*/newSymbol(\"disposeOnUnmountProto\");\nvar instStoreKey = /*#__PURE__*/newSymbol(\"disposeOnUnmountInst\");\n\nfunction runDisposersOnWillUnmount() {\n  var _this = this;\n\n  [].concat(this[protoStoreKey] || [], this[instStoreKey] || []).forEach(function (propKeyOrFunction) {\n    var prop = typeof propKeyOrFunction === \"string\" ? _this[propKeyOrFunction] : propKeyOrFunction;\n\n    if (prop !== undefined && prop !== null) {\n      if (Array.isArray(prop)) prop.map(function (f) {\n        return f();\n      });else prop();\n    }\n  });\n}\n\nfunction disposeOnUnmount(target, propertyKeyOrFunction) {\n  if (Array.isArray(propertyKeyOrFunction)) {\n    return propertyKeyOrFunction.map(function (fn) {\n      return disposeOnUnmount(target, fn);\n    });\n  }\n\n  var c = Object.getPrototypeOf(target).constructor;\n  var c2 = Object.getPrototypeOf(target.constructor); // Special case for react-hot-loader\n\n  var c3 = Object.getPrototypeOf(Object.getPrototypeOf(target));\n\n  if (!(c === React__default.Component || c === React__default.PureComponent || c2 === React__default.Component || c2 === React__default.PureComponent || c3 === React__default.Component || c3 === React__default.PureComponent)) {\n    throw new Error(\"[mobx-react] disposeOnUnmount only supports direct subclasses of React.Component or React.PureComponent.\");\n  }\n\n  if (typeof propertyKeyOrFunction !== \"string\" && typeof propertyKeyOrFunction !== \"function\" && !Array.isArray(propertyKeyOrFunction)) {\n    throw new Error(\"[mobx-react] disposeOnUnmount only works if the parameter is either a property key or a function.\");\n  } // decorator's target is the prototype, so it doesn't have any instance properties like props\n\n\n  var isDecorator = typeof propertyKeyOrFunction === \"string\"; // add property key / function we want run (disposed) to the store\n\n  var componentWasAlreadyModified = !!target[protoStoreKey] || !!target[instStoreKey];\n  var store = isDecorator ? // decorators are added to the prototype store\n  target[protoStoreKey] || (target[protoStoreKey] = []) : // functions are added to the instance store\n  target[instStoreKey] || (target[instStoreKey] = []);\n  store.push(propertyKeyOrFunction); // tweak the component class componentWillUnmount if not done already\n\n  if (!componentWasAlreadyModified) {\n    patch(target, \"componentWillUnmount\", runDisposersOnWillUnmount);\n  } // return the disposer as is if invoked as a non decorator\n\n\n  if (typeof propertyKeyOrFunction !== \"string\") {\n    return propertyKeyOrFunction;\n  }\n}\n\nfunction createChainableTypeChecker(validator) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = new Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      rest[_key - 6] = arguments[_key];\n    }\n\n    return untracked(function () {\n      componentName = componentName || \"<<anonymous>>\";\n      propFullName = propFullName || propName;\n\n      if (props[propName] == null) {\n        if (isRequired) {\n          var actual = props[propName] === null ? \"null\" : \"undefined\";\n          return new Error(\"The \" + location + \" `\" + propFullName + \"` is marked as required \" + \"in `\" + componentName + \"`, but its value is `\" + actual + \"`.\");\n        }\n\n        return null;\n      } else {\n        // @ts-ignore rest arg is necessary for some React internals - fails tests otherwise\n        return validator.apply(void 0, [props, propName, componentName, location, propFullName].concat(rest));\n      }\n    });\n  }\n\n  var chainedCheckType = checkType.bind(null, false); // Add isRequired to satisfy Requirable\n\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n} // Copied from React.PropTypes\n\n\nfunction isSymbol(propType, propValue) {\n  // Native Symbol.\n  if (propType === \"symbol\") {\n    return true;\n  } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n  if (propValue[\"@@toStringTag\"] === \"Symbol\") {\n    return true;\n  } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n  if (typeof Symbol === \"function\" && propValue instanceof Symbol) {\n    return true;\n  }\n\n  return false;\n} // Copied from React.PropTypes\n\n\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n\n  if (Array.isArray(propValue)) {\n    return \"array\";\n  }\n\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return \"object\";\n  }\n\n  if (isSymbol(propType, propValue)) {\n    return \"symbol\";\n  }\n\n  return propType;\n} // This handles more types than `getPropType`. Only used for error messages.\n// Copied from React.PropTypes\n\n\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n\n  if (propType === \"object\") {\n    if (propValue instanceof Date) {\n      return \"date\";\n    } else if (propValue instanceof RegExp) {\n      return \"regexp\";\n    }\n  }\n\n  return propType;\n}\n\nfunction createObservableTypeCheckerCreator(allowNativeType, mobxType) {\n  return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {\n    return untracked(function () {\n      if (allowNativeType) {\n        if (getPropType(props[propName]) === mobxType.toLowerCase()) return null;\n      }\n\n      var mobxChecker;\n\n      switch (mobxType) {\n        case \"Array\":\n          mobxChecker = isObservableArray;\n          break;\n\n        case \"Object\":\n          mobxChecker = isObservableObject;\n          break;\n\n        case \"Map\":\n          mobxChecker = isObservableMap;\n          break;\n\n        default:\n          throw new Error(\"Unexpected mobxType: \" + mobxType);\n      }\n\n      var propValue = props[propName];\n\n      if (!mobxChecker(propValue)) {\n        var preciseType = getPreciseType(propValue);\n        var nativeTypeExpectationMessage = allowNativeType ? \" or javascript `\" + mobxType.toLowerCase() + \"`\" : \"\";\n        return new Error(\"Invalid prop `\" + propFullName + \"` of type `\" + preciseType + \"` supplied to\" + \" `\" + componentName + \"`, expected `mobx.Observable\" + mobxType + \"`\" + nativeTypeExpectationMessage + \".\");\n      }\n\n      return null;\n    });\n  });\n}\n\nfunction createObservableArrayOfTypeChecker(allowNativeType, typeChecker) {\n  return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {\n      rest[_key2 - 5] = arguments[_key2];\n    }\n\n    return untracked(function () {\n      if (typeof typeChecker !== \"function\") {\n        return new Error(\"Property `\" + propFullName + \"` of component `\" + componentName + \"` has \" + \"invalid PropType notation.\");\n      } else {\n        var error = createObservableTypeCheckerCreator(allowNativeType, \"Array\")(props, propName, componentName, location, propFullName);\n        if (error instanceof Error) return error;\n        var propValue = props[propName];\n\n        for (var i = 0; i < propValue.length; i++) {\n          error = typeChecker.apply(void 0, [propValue, i, componentName, location, propFullName + \"[\" + i + \"]\"].concat(rest));\n          if (error instanceof Error) return error;\n        }\n\n        return null;\n      }\n    });\n  });\n}\n\nvar observableArray = /*#__PURE__*/createObservableTypeCheckerCreator(false, \"Array\");\nvar observableArrayOf = /*#__PURE__*/createObservableArrayOfTypeChecker.bind(null, false);\nvar observableMap = /*#__PURE__*/createObservableTypeCheckerCreator(false, \"Map\");\nvar observableObject = /*#__PURE__*/createObservableTypeCheckerCreator(false, \"Object\");\nvar arrayOrObservableArray = /*#__PURE__*/createObservableTypeCheckerCreator(true, \"Array\");\nvar arrayOrObservableArrayOf = /*#__PURE__*/createObservableArrayOfTypeChecker.bind(null, true);\nvar objectOrObservableObject = /*#__PURE__*/createObservableTypeCheckerCreator(true, \"Object\");\nvar PropTypes = {\n  observableArray: observableArray,\n  observableArrayOf: observableArrayOf,\n  observableMap: observableMap,\n  observableObject: observableObject,\n  arrayOrObservableArray: arrayOrObservableArray,\n  arrayOrObservableArrayOf: arrayOrObservableArrayOf,\n  objectOrObservableObject: objectOrObservableObject\n};\nif (!Component) throw new Error(\"mobx-react requires React to be available\");\nif (!observable) throw new Error(\"mobx-react requires mobx to be available\");\nexport { MobXProviderContext, PropTypes, Provider, disposeOnUnmount, inject, observer };","map":{"version":3,"mappings":"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","names":["symbolId","createSymbol","name","Symbol","symbol","createdSymbols","newSymbol","shallowEqual","objA","objB","is","keysA","Object","keys","keysB","length","i","hasOwnProperty","call","x","y","hoistBlackList","$$typeof","render","compare","type","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","displayName","propTypes","copyStaticProperties","base","target","protoProps","getOwnPropertyNames","getPrototypeOf","forEach","key","indexOf","defineProperty","getOwnPropertyDescriptor","setHiddenProp","prop","value","enumerable","configurable","writable","mobxMixins","mobxPatchedDefinition","getMixins","methodName","methodMixins","locks","methods","wrapper","realMethod","_len","args","retVal","undefined","apply","mx","_this","wrapFunction","fn","_len2","patch","mixinMethod","push","oldDefinition","originalMethod","newDefinition","createDefinition","wrappedFunc","get","set","mobxAdminProperty","$mobx","mobxObserverProperty","mobxIsUnmounted","skipRenderKey","isForcingUpdateKey","makeClassComponentObserver","componentClass","prototype","getDisplayName","console","warn","componentWillReact","Error","PureComponent","shouldComponentUpdate","observerSCU","makeObservableProp","baseRender","makeComponentReactive","_this$render$mobxAdmi","isUsingStaticRendering","dispose","comp","constructor","initialName","bind","isRenderingPending","reaction","Reaction","hasError","Component","forceUpdate","reactiveRender","exception","rendering","track","_allowStateChanges","e","nextProps","nextState","state","props","propName","valueHolderKey","atomHolderKey","getAtom","createAtom","prevReadState","_allowStateReadsStart","_allowStateReadsEnd","reportObserved","v","reportChanged","hasSymbol","ReactForwardRefSymbol","React","ReactMemoSymbol","observer","component","ObserverForwardRef","arguments","Observer","isPrototypeOf","observerLite","_extends","MobXProviderContext","createContext","Provider","children","stores","parentValue","useContext","mutableProviderRef","useRef","current","newValue","createStoreInjector","grabStoresFn","injectNames","makeReactive","Injector","forwardRef","ref","newProps","context","assign","createElement","getInjectName","componentName","grabStoresByName","storeNames","baseStores","storeName","inject","join","protoStoreKey","instStoreKey","runDisposersOnWillUnmount","propKeyOrFunction","Array","isArray","map","f","disposeOnUnmount","propertyKeyOrFunction","c","c2","c3","isDecorator","componentWasAlreadyModified","store","createChainableTypeChecker","validator","checkType","isRequired","location","propFullName","rest","untracked","actual","chainedCheckType","isSymbol","propType","propValue","getPropType","RegExp","getPreciseType","Date","createObservableTypeCheckerCreator","allowNativeType","mobxType","toLowerCase","mobxChecker","isObservableArray","isObservableObject","isObservableMap","preciseType","nativeTypeExpectationMessage","createObservableArrayOfTypeChecker","typeChecker","error","observableArray","observableArrayOf","observableMap","observableObject","arrayOrObservableArray","arrayOrObservableArrayOf","objectOrObservableObject","PropTypes","observable"],"sources":["/Users/abood/Desktop/SurveyApp/node_modules/mobx-react/src/utils/utils.ts","/Users/abood/Desktop/SurveyApp/node_modules/mobx-react/src/observerClass.ts","/Users/abood/Desktop/SurveyApp/node_modules/mobx-react/src/observer.tsx","/Users/abood/Desktop/SurveyApp/node_modules/mobx-react/src/Provider.tsx","/Users/abood/Desktop/SurveyApp/node_modules/mobx-react/src/inject.ts","/Users/abood/Desktop/SurveyApp/node_modules/mobx-react/src/disposeOnUnmount.ts","/Users/abood/Desktop/SurveyApp/node_modules/mobx-react/src/propTypes.ts","/Users/abood/Desktop/SurveyApp/node_modules/mobx-react/src/index.ts"],"sourcesContent":["let symbolId = 0\nfunction createSymbol(name: string): symbol | string {\n    if (typeof Symbol === \"function\") {\n        return Symbol(name)\n    }\n    const symbol = `__$mobx-react ${name} (${symbolId})`\n    symbolId++\n    return symbol\n}\n\nconst createdSymbols = {}\nexport function newSymbol(name: string): symbol | string {\n    if (!createdSymbols[name]) {\n        createdSymbols[name] = createSymbol(name)\n    }\n    return createdSymbols[name]\n}\n\nexport function shallowEqual(objA: any, objB: any): boolean {\n    //From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (is(objA, objB)) return true\n    if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false\n    }\n    const keysA = Object.keys(objA)\n    const keysB = Object.keys(objB)\n    if (keysA.length !== keysB.length) return false\n    for (let i = 0; i < keysA.length; i++) {\n        if (!Object.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false\n        }\n    }\n    return true\n}\n\nfunction is(x: any, y: any): boolean {\n    // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (x === y) {\n        return x !== 0 || 1 / x === 1 / y\n    } else {\n        return x !== x && y !== y\n    }\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList = {\n    $$typeof: 1,\n    render: 1,\n    compare: 1,\n    type: 1,\n    childContextTypes: 1,\n    contextType: 1,\n    contextTypes: 1,\n    defaultProps: 1,\n    getDefaultProps: 1,\n    getDerivedStateFromError: 1,\n    getDerivedStateFromProps: 1,\n    mixins: 1,\n    displayName: 1,\n    propTypes: 1\n}\n\nexport function copyStaticProperties(base: object, target: object): void {\n    const protoProps = Object.getOwnPropertyNames(Object.getPrototypeOf(base))\n    Object.getOwnPropertyNames(base).forEach(key => {\n        if (!hoistBlackList[key] && protoProps.indexOf(key) === -1) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n\n/**\n * Helper to set `prop` to `this` as non-enumerable (hidden prop)\n * @param target\n * @param prop\n * @param value\n */\nexport function setHiddenProp(target: object, prop: any, value: any): void {\n    if (!Object.hasOwnProperty.call(target, prop)) {\n        Object.defineProperty(target, prop, {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value\n        })\n    } else {\n        target[prop] = value\n    }\n}\n\n/**\n * Utilities for patching componentWillUnmount, to make sure @disposeOnUnmount works correctly icm with user defined hooks\n * and the handler provided by mobx-react\n */\nconst mobxMixins = newSymbol(\"patchMixins\")\nconst mobxPatchedDefinition = newSymbol(\"patchedDefinition\")\n\nexport interface Mixins extends Record<string, any> {\n    locks: number\n    methods: Array<Function>\n}\n\nfunction getMixins(target: object, methodName: string): Mixins {\n    const mixins = (target[mobxMixins] = target[mobxMixins] || {})\n    const methodMixins = (mixins[methodName] = mixins[methodName] || {})\n    methodMixins.locks = methodMixins.locks || 0\n    methodMixins.methods = methodMixins.methods || []\n    return methodMixins\n}\n\nfunction wrapper(realMethod: Function, mixins: Mixins, ...args: Array<any>) {\n    // locks are used to ensure that mixins are invoked only once per invocation, even on recursive calls\n    mixins.locks++\n\n    try {\n        let retVal\n        if (realMethod !== undefined && realMethod !== null) {\n            retVal = realMethod.apply(this, args)\n        }\n\n        return retVal\n    } finally {\n        mixins.locks--\n        if (mixins.locks === 0) {\n            mixins.methods.forEach(mx => {\n                mx.apply(this, args)\n            })\n        }\n    }\n}\n\nfunction wrapFunction(realMethod: Function, mixins: Mixins): (...args: Array<any>) => any {\n    const fn = function (...args: Array<any>) {\n        wrapper.call(this, realMethod, mixins, ...args)\n    }\n    return fn\n}\n\nexport function patch(target: object, methodName: string, mixinMethod: Function): void {\n    const mixins = getMixins(target, methodName)\n\n    if (mixins.methods.indexOf(mixinMethod) < 0) {\n        mixins.methods.push(mixinMethod)\n    }\n\n    const oldDefinition = Object.getOwnPropertyDescriptor(target, methodName)\n    if (oldDefinition && oldDefinition[mobxPatchedDefinition]) {\n        // already patched definition, do not repatch\n        return\n    }\n\n    const originalMethod = target[methodName]\n    const newDefinition = createDefinition(\n        target,\n        methodName,\n        oldDefinition ? oldDefinition.enumerable : undefined,\n        mixins,\n        originalMethod\n    )\n\n    Object.defineProperty(target, methodName, newDefinition)\n}\n\nfunction createDefinition(\n    target: object,\n    methodName: string,\n    enumerable: any,\n    mixins: Mixins,\n    originalMethod: Function\n): PropertyDescriptor {\n    let wrappedFunc = wrapFunction(originalMethod, mixins)\n\n    return {\n        [mobxPatchedDefinition]: true,\n        get: function () {\n            return wrappedFunc\n        },\n        set: function (value) {\n            if (this === target) {\n                wrappedFunc = wrapFunction(value, mixins)\n            } else {\n                // when it is an instance of the prototype/a child prototype patch that particular case again separately\n                // since we need to store separate values depending on wether it is the actual instance, the prototype, etc\n                // e.g. the method for super might not be the same as the method for the prototype which might be not the same\n                // as the method for the instance\n                const newDefinition = createDefinition(this, methodName, enumerable, mixins, value)\n                Object.defineProperty(this, methodName, newDefinition)\n            }\n        },\n        configurable: true,\n        enumerable: enumerable\n    }\n}\n","import { PureComponent, Component } from \"react\"\nimport {\n    createAtom,\n    _allowStateChanges,\n    Reaction,\n    $mobx,\n    _allowStateReadsStart,\n    _allowStateReadsEnd\n} from \"mobx\"\nimport { isUsingStaticRendering } from \"mobx-react-lite\"\n\nimport { newSymbol, shallowEqual, setHiddenProp, patch } from \"./utils/utils\"\n\nconst mobxAdminProperty = $mobx || \"$mobx\"\nconst mobxObserverProperty = newSymbol(\"isMobXReactObserver\")\nconst mobxIsUnmounted = newSymbol(\"isUnmounted\")\nconst skipRenderKey = newSymbol(\"skipRender\")\nconst isForcingUpdateKey = newSymbol(\"isForcingUpdate\")\n\nexport function makeClassComponentObserver(\n    componentClass: React.ComponentClass<any, any>\n): React.ComponentClass<any, any> {\n    const target = componentClass.prototype\n\n    if (componentClass[mobxObserverProperty]) {\n        const displayName = getDisplayName(target)\n        console.warn(\n            `The provided component class (${displayName}) \n                has already been declared as an observer component.`\n        )\n    } else {\n        componentClass[mobxObserverProperty] = true\n    }\n\n    if (target.componentWillReact)\n        throw new Error(\"The componentWillReact life-cycle event is no longer supported\")\n    if (componentClass[\"__proto__\"] !== PureComponent) {\n        if (!target.shouldComponentUpdate) target.shouldComponentUpdate = observerSCU\n        else if (target.shouldComponentUpdate !== observerSCU)\n            // n.b. unequal check, instead of existence check, as @observer might be on superclass as well\n            throw new Error(\n                \"It is not allowed to use shouldComponentUpdate in observer based components.\"\n            )\n    }\n\n    // this.props and this.state are made observable, just to make sure @computed fields that\n    // are defined inside the component, and which rely on state or props, re-compute if state or props change\n    // (otherwise the computed wouldn't update and become stale on props change, since props are not observable)\n    // However, this solution is not without it's own problems: https://github.com/mobxjs/mobx-react/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Aobservable-props-or-not+\n    makeObservableProp(target, \"props\")\n    makeObservableProp(target, \"state\")\n\n    const baseRender = target.render\n    if (typeof baseRender !== 'function') {\n        const displayName = getDisplayName(target)\n        throw new Error(\n            `[mobx-react] class component (${displayName}) is missing \\`render\\` method.`\n            + `\\n\\`observer\\` requires \\`render\\` being a function defined on prototype.`\n            + `\\n\\`render = () => {}\\` or \\`render = function() {}\\` is not supported.`\n        )\n    }\n    target.render = function () {\n        return makeComponentReactive.call(this, baseRender)\n    }\n    patch(target, \"componentWillUnmount\", function () {\n        if (isUsingStaticRendering() === true) return\n        this.render[mobxAdminProperty]?.dispose()\n        this[mobxIsUnmounted] = true\n\n        if (!this.render[mobxAdminProperty]) {\n            // Render may have been hot-swapped and/or overriden by a subclass.\n            const displayName = getDisplayName(this)\n            console.warn(\n                `The reactive render of an observer class component (${displayName}) \n                was overriden after MobX attached. This may result in a memory leak if the \n                overriden reactive render was not properly disposed.`\n            )\n        }\n    })\n    return componentClass\n}\n\n// Generates a friendly name for debugging\nfunction getDisplayName(comp: any) {\n    return (\n        comp.displayName ||\n        comp.name ||\n        (comp.constructor && (comp.constructor.displayName || comp.constructor.name)) ||\n        \"<component>\"\n    )\n}\n\nfunction makeComponentReactive(render: any) {\n    if (isUsingStaticRendering() === true) return render.call(this)\n\n    /**\n     * If props are shallowly modified, react will render anyway,\n     * so atom.reportChanged() should not result in yet another re-render\n     */\n    setHiddenProp(this, skipRenderKey, false)\n    /**\n     * forceUpdate will re-assign this.props. We don't want that to cause a loop,\n     * so detect these changes\n     */\n    setHiddenProp(this, isForcingUpdateKey, false)\n\n    const initialName = getDisplayName(this)\n    const baseRender = render.bind(this)\n\n    let isRenderingPending = false\n\n    const reaction = new Reaction(`${initialName}.render()`, () => {\n        if (!isRenderingPending) {\n            // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.js)\n            // This unidiomatic React usage but React will correctly warn about this so we continue as usual\n            // See #85 / Pull #44\n            isRenderingPending = true\n            if (this[mobxIsUnmounted] !== true) {\n                let hasError = true\n                try {\n                    setHiddenProp(this, isForcingUpdateKey, true)\n                    if (!this[skipRenderKey]) Component.prototype.forceUpdate.call(this)\n                    hasError = false\n                } finally {\n                    setHiddenProp(this, isForcingUpdateKey, false)\n                    if (hasError) reaction.dispose()\n                }\n            }\n        }\n    })\n\n    reaction[\"reactComponent\"] = this\n    reactiveRender[mobxAdminProperty] = reaction\n    this.render = reactiveRender\n\n    function reactiveRender() {\n        isRenderingPending = false\n        let exception = undefined\n        let rendering = undefined\n        reaction.track(() => {\n            try {\n                rendering = _allowStateChanges(false, baseRender)\n            } catch (e) {\n                exception = e\n            }\n        })\n        if (exception) {\n            throw exception\n        }\n        return rendering\n    }\n\n    return reactiveRender.call(this)\n}\n\nfunction observerSCU(nextProps: React.Props<any>, nextState: any): boolean {\n    if (isUsingStaticRendering()) {\n        console.warn(\n            \"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\"\n        )\n    }\n    // update on any state changes (as is the default)\n    if (this.state !== nextState) {\n        return true\n    }\n    // update if props are shallowly not equal, inspired by PureRenderMixin\n    // we could return just 'false' here, and avoid the `skipRender` checks etc\n    // however, it is nicer if lifecycle events are triggered like usually,\n    // so we return true here if props are shallowly modified.\n    return !shallowEqual(this.props, nextProps)\n}\n\nfunction makeObservableProp(target: any, propName: string): void {\n    const valueHolderKey = newSymbol(`reactProp_${propName}_valueHolder`)\n    const atomHolderKey = newSymbol(`reactProp_${propName}_atomHolder`)\n    function getAtom() {\n        if (!this[atomHolderKey]) {\n            setHiddenProp(this, atomHolderKey, createAtom(\"reactive \" + propName))\n        }\n        return this[atomHolderKey]\n    }\n    Object.defineProperty(target, propName, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            let prevReadState = false\n\n            if (_allowStateReadsStart && _allowStateReadsEnd) {\n                prevReadState = _allowStateReadsStart(true)\n            }\n            getAtom.call(this).reportObserved()\n\n            if (_allowStateReadsStart && _allowStateReadsEnd) {\n                _allowStateReadsEnd(prevReadState)\n            }\n\n            return this[valueHolderKey]\n        },\n        set: function set(v) {\n            if (!this[isForcingUpdateKey] && !shallowEqual(this[valueHolderKey], v)) {\n                setHiddenProp(this, valueHolderKey, v)\n                setHiddenProp(this, skipRenderKey, true)\n                getAtom.call(this).reportChanged()\n                setHiddenProp(this, skipRenderKey, false)\n            } else {\n                setHiddenProp(this, valueHolderKey, v)\n            }\n        }\n    })\n}\n","import * as React from \"react\"\nimport { observer as observerLite, Observer } from \"mobx-react-lite\"\n\nimport { makeClassComponentObserver } from \"./observerClass\"\nimport { IReactComponent } from \"./types/IReactComponent\"\n\nconst hasSymbol = typeof Symbol === \"function\" && Symbol.for\n\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nconst ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof React.forwardRef === \"function\" && React.forwardRef((props: any) => null)[\"$$typeof\"]\n\nconst ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof React.memo === \"function\" && React.memo((props: any) => null)[\"$$typeof\"]\n\n/**\n * Observer function / decorator\n */\nexport function observer<T extends IReactComponent>(component: T): T {\n    if (component[\"isMobxInjector\"] === true) {\n        console.warn(\n            \"Mobx observer: You are trying to use 'observer' on a component that already has 'inject'. Please apply 'observer' before applying 'inject'\"\n        )\n    }\n\n    if (ReactMemoSymbol && component[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\n            \"Mobx observer: You are trying to use 'observer' on a function component wrapped in either another observer or 'React.memo'. The observer already applies 'React.memo' for you.\"\n        )\n    }\n\n    // Unwrap forward refs into `<Observer>` component\n    // we need to unwrap the render, because it is the inner render that needs to be tracked,\n    // not the ForwardRef HoC\n    if (ReactForwardRefSymbol && component[\"$$typeof\"] === ReactForwardRefSymbol) {\n        const baseRender = component[\"render\"]\n        if (typeof baseRender !== \"function\")\n            throw new Error(\"render property of ForwardRef was not a function\")\n        return React.forwardRef(function ObserverForwardRef() {\n            const args = arguments\n            return <Observer>{() => baseRender.apply(undefined, args)}</Observer>\n        }) as T\n    }\n\n    // Function component\n    if (\n        typeof component === \"function\" &&\n        (!component.prototype || !component.prototype.render) &&\n        !component[\"isReactClass\"] &&\n        !Object.prototype.isPrototypeOf.call(React.Component, component)\n    ) {\n        return observerLite(component as React.StatelessComponent<any>) as T\n    }\n\n    return makeClassComponentObserver(component as React.ComponentClass<any, any>) as T\n}\n","import React from \"react\"\nimport { shallowEqual } from \"./utils/utils\"\nimport { IValueMap } from \"./types/IValueMap\"\n\nexport const MobXProviderContext = React.createContext<IValueMap>({})\n\nexport interface ProviderProps extends IValueMap {\n    children: React.ReactNode\n}\n\nexport function Provider(props: ProviderProps) {\n    const { children, ...stores } = props\n    const parentValue = React.useContext(MobXProviderContext)\n    const mutableProviderRef = React.useRef({ ...parentValue, ...stores })\n    const value = mutableProviderRef.current\n\n    if (__DEV__) {\n        const newValue = { ...value, ...stores } // spread in previous state for the context based stores\n        if (!shallowEqual(value, newValue)) {\n            throw new Error(\n                \"MobX Provider: The set of provided stores has changed. See: https://github.com/mobxjs/mobx-react#the-set-of-provided-stores-has-changed-error.\"\n            )\n        }\n    }\n\n    return <MobXProviderContext.Provider value={value}>{children}</MobXProviderContext.Provider>\n}\n\nProvider.displayName = \"MobXProvider\"\n","import React from \"react\"\nimport { observer } from \"./observer\"\nimport { copyStaticProperties } from \"./utils/utils\"\nimport { MobXProviderContext } from \"./Provider\"\nimport { IReactComponent } from \"./types/IReactComponent\"\nimport { IValueMap } from \"./types/IValueMap\"\nimport { IWrappedComponent } from \"./types/IWrappedComponent\"\nimport { IStoresToProps } from \"./types/IStoresToProps\"\n\n/**\n * Store Injection\n */\nfunction createStoreInjector(\n    grabStoresFn: IStoresToProps,\n    component: IReactComponent<any>,\n    injectNames: string,\n    makeReactive: boolean\n): IReactComponent<any> {\n    // Support forward refs\n    let Injector: IReactComponent<any> = React.forwardRef((props, ref) => {\n        const newProps = { ...props }\n        const context = React.useContext(MobXProviderContext)\n        Object.assign(newProps, grabStoresFn(context || {}, newProps) || {})\n\n        if (ref) {\n            newProps.ref = ref\n        }\n\n        return React.createElement(component, newProps)\n    })\n\n    if (makeReactive) Injector = observer(Injector)\n    Injector[\"isMobxInjector\"] = true // assigned late to suppress observer warning\n\n    // Static fields from component should be visible on the generated Injector\n    copyStaticProperties(component, Injector)\n    Injector[\"wrappedComponent\"] = component\n    Injector.displayName = getInjectName(component, injectNames)\n    return Injector\n}\n\nfunction getInjectName(component: IReactComponent<any>, injectNames: string): string {\n    let displayName\n    const componentName =\n        component.displayName ||\n        component.name ||\n        (component.constructor && component.constructor.name) ||\n        \"Component\"\n    if (injectNames) displayName = \"inject-with-\" + injectNames + \"(\" + componentName + \")\"\n    else displayName = \"inject(\" + componentName + \")\"\n    return displayName\n}\n\nfunction grabStoresByName(\n    storeNames: Array<string>\n): (baseStores: IValueMap, nextProps: React.Props<any>) => React.PropsWithRef<any> | undefined {\n    return function (baseStores, nextProps) {\n        storeNames.forEach(function (storeName) {\n            if (\n                storeName in nextProps // prefer props over stores\n            )\n                return\n            if (!(storeName in baseStores))\n                throw new Error(\n                    \"MobX injector: Store '\" +\n                        storeName +\n                        \"' is not available! Make sure it is provided by some Provider\"\n                )\n            nextProps[storeName] = baseStores[storeName]\n        })\n        return nextProps\n    }\n}\n\nexport function inject(\n    ...stores: Array<string>\n): <T extends IReactComponent<any>>(\n    target: T\n) => T & (T extends IReactComponent<infer P> ? IWrappedComponent<P> : never)\nexport function inject<S, P, I, C>(\n    fn: IStoresToProps<S, P, I, C>\n): <T extends IReactComponent>(target: T) => T & IWrappedComponent<P>\n\n/**\n * higher order component that injects stores to a child.\n * takes either a varargs list of strings, which are stores read from the context,\n * or a function that manually maps the available stores from the context to props:\n * storesToProps(mobxStores, props, context) => newProps\n */\nexport function inject(/* fn(stores, nextProps) or ...storeNames */ ...storeNames: Array<any>) {\n    if (typeof arguments[0] === \"function\") {\n        let grabStoresFn = arguments[0]\n        return (componentClass: React.ComponentClass<any, any>) =>\n            createStoreInjector(grabStoresFn, componentClass, grabStoresFn.name, true)\n    } else {\n        return (componentClass: React.ComponentClass<any, any>) =>\n            createStoreInjector(\n                grabStoresByName(storeNames),\n                componentClass,\n                storeNames.join(\"-\"),\n                false\n            )\n    }\n}\n","import React from \"react\"\nimport { patch, newSymbol } from \"./utils/utils\"\n\ntype Disposer = () => void\n\nconst protoStoreKey = newSymbol(\"disposeOnUnmountProto\")\nconst instStoreKey = newSymbol(\"disposeOnUnmountInst\")\n\nfunction runDisposersOnWillUnmount() {\n    ;[...(this[protoStoreKey] || []), ...(this[instStoreKey] || [])].forEach(propKeyOrFunction => {\n        const prop =\n            typeof propKeyOrFunction === \"string\" ? this[propKeyOrFunction] : propKeyOrFunction\n        if (prop !== undefined && prop !== null) {\n            if (Array.isArray(prop)) prop.map(f => f())\n            else prop()\n        }\n    })\n}\n\nexport function disposeOnUnmount(target: React.Component<any, any>, propertyKey: PropertyKey): void\nexport function disposeOnUnmount<TF extends Disposer | Array<Disposer>>(\n    target: React.Component<any, any>,\n    fn: TF\n): TF\n\nexport function disposeOnUnmount(\n    target: React.Component<any, any>,\n    propertyKeyOrFunction: PropertyKey | Disposer | Array<Disposer>\n): PropertyKey | Disposer | Array<Disposer> | void {\n    if (Array.isArray(propertyKeyOrFunction)) {\n        return propertyKeyOrFunction.map(fn => disposeOnUnmount(target, fn))\n    }\n\n    const c = Object.getPrototypeOf(target).constructor\n    const c2 = Object.getPrototypeOf(target.constructor)\n    // Special case for react-hot-loader\n    const c3 = Object.getPrototypeOf(Object.getPrototypeOf(target))\n    if (\n        !(\n            c === React.Component ||\n            c === React.PureComponent ||\n            c2 === React.Component ||\n            c2 === React.PureComponent ||\n            c3 === React.Component ||\n            c3 === React.PureComponent\n        )\n    ) {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only supports direct subclasses of React.Component or React.PureComponent.\"\n        )\n    }\n\n    if (\n        typeof propertyKeyOrFunction !== \"string\" &&\n        typeof propertyKeyOrFunction !== \"function\" &&\n        !Array.isArray(propertyKeyOrFunction)\n    ) {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only works if the parameter is either a property key or a function.\"\n        )\n    }\n\n    // decorator's target is the prototype, so it doesn't have any instance properties like props\n    const isDecorator = typeof propertyKeyOrFunction === \"string\"\n\n    // add property key / function we want run (disposed) to the store\n    const componentWasAlreadyModified = !!target[protoStoreKey] || !!target[instStoreKey]\n    const store = isDecorator\n        ? // decorators are added to the prototype store\n          target[protoStoreKey] || (target[protoStoreKey] = [])\n        : // functions are added to the instance store\n          target[instStoreKey] || (target[instStoreKey] = [])\n\n    store.push(propertyKeyOrFunction)\n\n    // tweak the component class componentWillUnmount if not done already\n    if (!componentWasAlreadyModified) {\n        patch(target, \"componentWillUnmount\", runDisposersOnWillUnmount)\n    }\n\n    // return the disposer as is if invoked as a non decorator\n    if (typeof propertyKeyOrFunction !== \"string\") {\n        return propertyKeyOrFunction\n    }\n}\n","import { isObservableArray, isObservableObject, isObservableMap, untracked } from \"mobx\"\n\n// Copied from React.PropTypes\nfunction createChainableTypeChecker(validator: React.Validator<any>): React.Requireable<any> {\n    function checkType(\n        isRequired: boolean,\n        props: any,\n        propName: string,\n        componentName: string,\n        location: string,\n        propFullName: string,\n        ...rest: any[]\n    ) {\n        return untracked(() => {\n            componentName = componentName || \"<<anonymous>>\"\n            propFullName = propFullName || propName\n            if (props[propName] == null) {\n                if (isRequired) {\n                    const actual = props[propName] === null ? \"null\" : \"undefined\"\n                    return new Error(\n                        \"The \" +\n                            location +\n                            \" `\" +\n                            propFullName +\n                            \"` is marked as required \" +\n                            \"in `\" +\n                            componentName +\n                            \"`, but its value is `\" +\n                            actual +\n                            \"`.\"\n                    )\n                }\n                return null\n            } else {\n                // @ts-ignore rest arg is necessary for some React internals - fails tests otherwise\n                return validator(props, propName, componentName, location, propFullName, ...rest)\n            }\n        })\n    }\n\n    const chainedCheckType: any = checkType.bind(null, false)\n    // Add isRequired to satisfy Requirable\n    chainedCheckType.isRequired = checkType.bind(null, true)\n    return chainedCheckType\n}\n\n// Copied from React.PropTypes\nfunction isSymbol(propType: any, propValue: any): boolean {\n    // Native Symbol.\n    if (propType === \"symbol\") {\n        return true\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue[\"@@toStringTag\"] === \"Symbol\") {\n        return true\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === \"function\" && propValue instanceof Symbol) {\n        return true\n    }\n\n    return false\n}\n\n// Copied from React.PropTypes\nfunction getPropType(propValue: any): string {\n    const propType = typeof propValue\n    if (Array.isArray(propValue)) {\n        return \"array\"\n    }\n    if (propValue instanceof RegExp) {\n        // Old webkits (at least until Android 4.0) return 'function' rather than\n        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n        // passes PropTypes.object.\n        return \"object\"\n    }\n    if (isSymbol(propType, propValue)) {\n        return \"symbol\"\n    }\n    return propType\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// Copied from React.PropTypes\nfunction getPreciseType(propValue: any): string {\n    const propType = getPropType(propValue)\n    if (propType === \"object\") {\n        if (propValue instanceof Date) {\n            return \"date\"\n        } else if (propValue instanceof RegExp) {\n            return \"regexp\"\n        }\n    }\n    return propType\n}\n\nfunction createObservableTypeCheckerCreator(\n    allowNativeType: any,\n    mobxType: any\n): React.Requireable<any> {\n    return createChainableTypeChecker((props, propName, componentName, location, propFullName) => {\n        return untracked(() => {\n            if (allowNativeType) {\n                if (getPropType(props[propName]) === mobxType.toLowerCase()) return null\n            }\n            let mobxChecker\n            switch (mobxType) {\n                case \"Array\":\n                    mobxChecker = isObservableArray\n                    break\n                case \"Object\":\n                    mobxChecker = isObservableObject\n                    break\n                case \"Map\":\n                    mobxChecker = isObservableMap\n                    break\n                default:\n                    throw new Error(`Unexpected mobxType: ${mobxType}`)\n            }\n            const propValue = props[propName]\n            if (!mobxChecker(propValue)) {\n                const preciseType = getPreciseType(propValue)\n                const nativeTypeExpectationMessage = allowNativeType\n                    ? \" or javascript `\" + mobxType.toLowerCase() + \"`\"\n                    : \"\"\n                return new Error(\n                    \"Invalid prop `\" +\n                        propFullName +\n                        \"` of type `\" +\n                        preciseType +\n                        \"` supplied to\" +\n                        \" `\" +\n                        componentName +\n                        \"`, expected `mobx.Observable\" +\n                        mobxType +\n                        \"`\" +\n                        nativeTypeExpectationMessage +\n                        \".\"\n                )\n            }\n            return null\n        })\n    })\n}\n\nfunction createObservableArrayOfTypeChecker(\n    allowNativeType: boolean,\n    typeChecker: React.Validator<any>\n) {\n    return createChainableTypeChecker(\n        (props, propName, componentName, location, propFullName, ...rest) => {\n            return untracked(() => {\n                if (typeof typeChecker !== \"function\") {\n                    return new Error(\n                        \"Property `\" +\n                            propFullName +\n                            \"` of component `\" +\n                            componentName +\n                            \"` has \" +\n                            \"invalid PropType notation.\"\n                    )\n                } else {\n                    let error = createObservableTypeCheckerCreator(allowNativeType, \"Array\")(\n                        props,\n                        propName,\n                        componentName,\n                        location,\n                        propFullName\n                    )\n\n                    if (error instanceof Error) return error\n                    const propValue = props[propName]\n                    for (let i = 0; i < propValue.length; i++) {\n                        error = (typeChecker as React.Validator<any>)(\n                            propValue,\n                            i as any,\n                            componentName,\n                            location,\n                            propFullName + \"[\" + i + \"]\",\n                            ...rest\n                        )\n                        if (error instanceof Error) return error\n                    }\n\n                    return null\n                }\n            })\n        }\n    )\n}\n\nconst observableArray = createObservableTypeCheckerCreator(false, \"Array\")\nconst observableArrayOf = createObservableArrayOfTypeChecker.bind(null, false)\nconst observableMap = createObservableTypeCheckerCreator(false, \"Map\")\nconst observableObject = createObservableTypeCheckerCreator(false, \"Object\")\nconst arrayOrObservableArray = createObservableTypeCheckerCreator(true, \"Array\")\nconst arrayOrObservableArrayOf = createObservableArrayOfTypeChecker.bind(null, true)\nconst objectOrObservableObject = createObservableTypeCheckerCreator(true, \"Object\")\n\nexport const PropTypes = {\n    observableArray,\n    observableArrayOf,\n    observableMap,\n    observableObject,\n    arrayOrObservableArray,\n    arrayOrObservableArrayOf,\n    objectOrObservableObject\n}\n","import { observable } from \"mobx\"\nimport { Component } from \"react\"\n\nif (!Component) throw new Error(\"mobx-react requires React to be available\")\nif (!observable) throw new Error(\"mobx-react requires mobx to be available\")\n\nexport {\n    Observer,\n    useObserver,\n    useAsObservableSource,\n    useLocalStore,\n    isUsingStaticRendering,\n    useStaticRendering,\n    enableStaticRendering,\n    observerBatching,\n    useLocalObservable\n} from \"mobx-react-lite\"\n\nexport { observer } from \"./observer\"\n\nexport { MobXProviderContext, Provider, ProviderProps } from \"./Provider\"\nexport { inject } from \"./inject\"\nexport { disposeOnUnmount } from \"./disposeOnUnmount\"\nexport { PropTypes } from \"./propTypes\"\nexport { IWrappedComponent } from \"./types/IWrappedComponent\"\n"]},"metadata":{},"sourceType":"module"}